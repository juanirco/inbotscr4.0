export class BlockManager{constructor(t,e){this.editor=t,this.maxColumns=4,this.selectedBlock=null,this.callbacks=e}showAddContentButton(){if(0===this.editor.children.length){const t=document.createElement("div");t.className="add-content-btn",t.innerHTML='\n                <button type="button" class="main-add-btn">\n                    ➕ Agregar contenido\n                </button>\n                <div class="content-options" style="display: none;">\n                    <button type="button" data-type="text">📝 Texto</button>\n                    <button type="button" data-type="image">🖼️ Imagen</button>\n                    <button type="button" data-type="code">💻 Código</button>\n                    <button type="button" data-type="quote">💬 Cita</button>\n                    <button type="button" data-type="video">🎥 Video</button>\n                    <button type="button" data-type="gif">🎭 GIF</button>\n                    <button type="button" data-type="card">📄 Card</button>\n                </div>\n            ',this.editor.appendChild(t),this.setupContentOptions(t)}}setupContentOptions(t){const e=t.querySelector(".main-add-btn"),o=t.querySelector(".content-options"),n=t.querySelectorAll(".content-options button");e.addEventListener("click",t=>{t.preventDefault(),t.stopPropagation(),o.style.display="flex"===o.style.display?"none":"flex"}),n.forEach(e=>{e.addEventListener("click",e=>{e.preventDefault(),e.stopPropagation();const o=e.target.dataset.type;this.addContentBlock(o),t.remove()})})}addContentBlock(t,e="bottom",o=null,n=null){const l=this.createRow(),s=this.callbacks.createContentBlock(t),c=this.createColumn();if(s.classList.add("block-size-medium","block-align-center"),c.appendChild(s),l.appendChild(c),"bottom"!==e&&o){if("top"===e)this.editor.insertBefore(l,o);else if("left"===e||"right"===e)return void this.addColumnToRow(o,s,e,n)}else this.editor.appendChild(l);this.selectBlock(s),this.callbacks.updateToolbarState(),this.callbacks.updateContentBlocks()}addColumnToRow(t,e,o,n){const l=t.querySelectorAll(".content-column");if(l.length>=this.maxColumns)return;const s=this.createColumn();s.appendChild(e),"left"===o?t.insertBefore(s,l[n]):"right"===o&&(n+1<l.length?t.insertBefore(s,l[n+1]):t.appendChild(s)),this.updateColumnWidths(t),this.callbacks.updateContentBlocks()}updateColumnWidths(t){const e=t.querySelectorAll(".content-column"),o=100/e.length;e.forEach(t=>{t.style.width=o+"%"})}createRow(){const t=document.createElement("div");return t.className="content-row",t}createColumn(){const t=document.createElement("div");return t.className="content-column",t}selectBlock(t){this.editor.querySelectorAll(".content-block.selected").forEach(t=>{t.classList.remove("selected")}),t.classList.add("selected"),this.selectedBlock=t,this.callbacks.onBlockSelected(t)}duplicateBlock(t){const e=t.cloneNode(!0),o=this.createRow(),n=this.createColumn();n.appendChild(e),o.appendChild(n);const l=t.closest(".content-row");l.parentNode.insertBefore(o,l.nextSibling),this.callbacks.setupBlockEvents(e),this.selectBlock(e),this.callbacks.updateToolbarState(),this.callbacks.updateContentBlocks()}deleteBlock(t){if(confirm("¿Estás seguro de eliminar este bloque?")){t.closest(".content-row").remove(),this.selectedBlock=null,this.callbacks.onBlockDeselected(),0===this.editor.children.length&&this.showAddContentButton(),this.callbacks.updateContentBlocks()}}applyBlockSize(t,e){t.classList.remove("block-size-small","block-size-medium","block-size-large"),t.classList.add("block-size-"+e),this.callbacks.updateContentBlocks()}applyBlockAlign(t,e){t.classList.remove("block-align-left","block-align-center","block-align-right"),t.classList.add("block-align-"+e),this.callbacks.updateContentBlocks()}getSelectedBlock(){return this.selectedBlock}}